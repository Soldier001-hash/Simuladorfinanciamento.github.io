
function _toConsumableArray(e) { return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread() } function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _iterableToArray(e) { if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e) } function _arrayWithoutHoles(e) { if (Array.isArray(e)) return _arrayLikeToArray(e) } function ownKeys(e, t) { var a = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), a.push.apply(a, r) } return a } function _objectSpread(e) { for (var t = 1; t < arguments.length; t++) { var a = null != arguments[t] ? arguments[t] : {}; t % 2 ? ownKeys(Object(a), !0).forEach(function (t) { _defineProperty(e, t, a[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : ownKeys(Object(a)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t)) }) } return e } function _defineProperty(e, t, a) { return t in e ? Object.defineProperty(e, t, { value: a, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = a, e } function _slicedToArray(e, t) { return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _unsupportedIterableToArray(e, t) || _nonIterableRest() } function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _unsupportedIterableToArray(e, t) { if (e) { if ("string" == typeof e) return _arrayLikeToArray(e, t); var a = Object.prototype.toString.call(e).slice(8, -1); return "Object" === a && e.constructor && (a = e.constructor.name), "Map" === a || "Set" === a ? Array.from(e) : "Arguments" === a || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a) ? _arrayLikeToArray(e, t) : void 0 } } function _arrayLikeToArray(e, t) { (null == t || t > e.length) && (t = e.length); for (var a = 0, r = new Array(t); a < t; a++)r[a] = e[a]; return r } function _iterableToArrayLimit(e, t) { var a = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"]; if (null != a) { var r, n, o = [], c = !0, l = !1; try { for (a = a.call(e); !(c = (r = a.next()).done) && (o.push(r.value), !t || o.length !== t); c = !0); } catch (e) { l = !0, n = e } finally { try { c || null == a.return || a.return() } finally { if (l) throw n } } return o } } function _arrayWithHoles(e) { if (Array.isArray(e)) return e } var allowancePecuniary = document.getElementById("calculatorAllowancePecuniary"); allowancePecuniary && allowancePecuniary.addEventListener("click", function () { return calculateAllowancePecuniary() }); var calculateAllowancePecuniary = function () { refreshSubmit(); var e = parseFloat(document.getElementById("salary__gross").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("number__absence").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("value__for__hours").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("number__dependent").value.replace(/\./g, "").replace(",", ".")), n = 0, o = "", c = 0; t <= 5 ? (n = 10, o = "20", c = 10) : t >= 6 && t <= 14 ? (n = 8, o = "16", c = 8) : t >= 15 && t <= 23 ? (n = 6, o = "12", c = 6) : t >= 24 && t <= 32 ? (n = 4, o = "8", c = 4) : (n = 0, o = "0", c = 0); var l = (e + a) / 30 * n, i = l / 3, u = (e + a) / 30 * o, s = u + u / 3, d = (e + a) / 30 * c, m = calculateINSSandIRRF(s, r), y = m.inssVal + m.irrfVal, _ = calculateINSSandIRRF(d, r), p = d - (_.irrfVal + _.inssVal), g = s - y + (l + i) + p; ativarResultado(), document.getElementById("days__available").innerHTML = n, document.getElementById("total__value__allowance").innerHTML = (l + i).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("days__rest").innerHTML = o, document.getElementById("total__received").innerHTML = (s - y + (l + i)).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("days__work").innerHTML = c, document.getElementById("value__holiday__sold").innerHTML = p.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("total__holiday").innerHTML = g.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("subtitle__table").classList.toggle("d-none", !1) }; if (document.getElementById("table__result__budegt")) { var resultDivisionBudget = function (e) { return { essential: e / 2, personal: .3 * e, financial: .2 * e } }, budgets = { budget_home: 0, budget_service: 0, budget_transport: 0, budget_food: 0, budget_cheers: 0, budget_education: 0, budget_travel: 0, budget_streaming: 0, budget_present: 0, budget_other: 0, budget_debts: 0, budget_poup: 0, budget_internet: 0 }, sectionTable = document.getElementById("input__budgets"); document.getElementById("monthly__income").addEventListener("keyup", function (e) { refreshSubmit(); var t = parseFloat(e.target.value.replace(/\./g, "").replace(",", ".")), a = resultDivisionBudget(t), r = a.essential, n = a.personal, o = a.financial; document.getElementById("dep__income").innerHTML = t.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("dep__essential").innerHTML = r.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("dep__personal").innerHTML = n.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("dep__financial").innerHTML = o.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }); var myBudgets = ["budget_home", "budget_service", "budget_transport", "budget_food", "budget_cheers", "budget_education", "budget_travel", "budget_streaming", "budget_present", "budget_other", "budget_debts", "budget_poup", "budget_internet"]; myBudgets.forEach(function (e) { document.getElementById("".concat(e)).addEventListener("keyup", function (t) { budgets["".concat(e)] = parseFloat(t.target.value.replace(/\./g, "").replace(",", ".")); var a, r, n, o, c, l, i, u, s, d, m, y, _, p, g, v, S, L, f, B, h, R, T, M, b, I, E, F, D; a = parseFloat(document.getElementById("monthly__income").value.replace(/\./g, "").replace(",", ".")), r = budgets.budget_home, n = budgets.budget_service, o = budgets.budget_transport, c = budgets.budget_food, l = budgets.budget_cheers, i = budgets.budget_education, u = budgets.budget_internet, s = budgets.budget_travel, d = budgets.budget_streaming, m = budgets.budget_present, y = budgets.budget_other, _ = budgets.budget_debts, p = budgets.budget_poup, g = resultDivisionBudget(a), v = g.essential, S = g.personal, L = g.financial, I = .75 * L, E = (R = (f = r + n + o + c + l + i) + (B = u + s + d + m + y) + (h = _ + p)) <= (T = .9 * a) ? "ParabÃ©ns, vocÃª consegue ter grande flexibilidade financeira." : R > T && R <= a ? "AtenÃ§Ã£o, seus gastos estÃ£o no limite, considere alguns ajustes para evitar surpresas." : R > a && R <= 1.1 * a ? "VocÃª estourou seu orÃ§amento, mas ainda Ã© possÃ­vel ajustar seus gastos se comeÃ§ar a agir agora." : "Seus gastos sÃ£o muito maiores que sua receita, considere urgentemente diminuir alguns custos.", F = f <= (M = .75 * v) ? "SeusÂ custos essenciais estÃ£o abaixo do previsto. VocÃª poderÃ¡ ter mais flexibilidade." : f > M && f <= v ? "SeusÂ custos essenciais estÃ£o dentro do esperado. ParabÃ©ns!" : "Seus custos essenciais estÃ£o fora do padrÃ£o, considere diminuir os seus gastos fixos.", D = B <= (b = .75 * S) ? "Seus custosÂ pessoais estÃ£o abaixo do esperado. Talvez um pouco de diversÃ£o possa fazer bem!" : B > b && B <= S ? "Seus custosÂ pessoais estÃ£o equilibrados. VocÃª encontrou um ponto de harmonia." : "Seus custosÂ pessoais estÃ£o acima do esperado, considere diminuir alguns gastos menos importantes.", sectionTable.querySelectorAll(".resultado").forEach(function (e) { return e.classList.add("d-block") }), sectionTable.querySelectorAll(".titulo__resultado").forEach(function (e) { return e.classList.add("d-block") }), document.getElementById("dep__total").innerHTML = R.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("dep__resposta").innerHTML = E, document.getElementById("result__desp__essential").innerHTML = F, document.getElementById("result__desp__personal").innerHTML = D, document.getElementById("result__desp__financial").innerHTML = _ >= L / 2 ? h <= I ? "VocÃª tem algumas dÃ­vidas, mas tambÃ©m tem espaÃ§o para comeÃ§ar a investir. Que tal montar sua reserva de emergÃªncia ou diversificar sua poupanÃ§a?" : h > I && h <= L ? "Seu fluxo financeiro estÃ¡ dentro do esperado, mas certifique-se que suas dÃ­vidas estÃ£o sob controle, caso contrÃ¡rio, poderÃ£o apertar o orÃ§amento." : "As dÃ­vidas podem estar sufocando seu orÃ§amento, considere uma renegociaÃ§Ã£o e depois comece a investir." : h <= I ? "Sua reserva financeira estÃ¡ indo muito bem! Caso jÃ¡ tenhaÂ suaÂ Reserva deÂ EmergÃªncia, considere comeÃ§ar a diversificar seus investimentos." : h > I && h <= L ? "Seu fluxo financeiro estÃ¡ dentro do esperado. NÃ£o se esqueÃ§a da Reserva de EmergÃªncia e da diversificaÃ§Ã£o de suas aplicaÃ§Ãµes." : "VocÃª estÃ¡ investindo bastante, parabÃ©ns! Seu orÃ§amento permite maior flexibilidade e poderÃ¡ alcanÃ§ar a independÃªncia financeira rapidamente." }) }) } var calcIPVA = function () { refreshSubmit(); var e = buildQuery(parseFloat(document.getElementById("valor__veiculo").value.replace(/\./g, "").replace(",", ".")), document.getElementById("slct").value, document.getElementById("slct2").value); fetch("".concat(object_name.env, "/api/calculators/ipva").concat(e)).then(function (e) { return e.json() }).then(function (e) { return t = e, ativarResultado(), document.querySelector("#valor__estimado").innerHTML = toBRLString(t.estimatedValue), document.querySelector("#base__valor__estimado").innerHTML = "alÃ­quota de ".concat(formatarToPercentage2(t.tax)), document.querySelector("#pagamento__desconto").innerHTML = toBRLString(t.discountedPayment), document.querySelector("#base__pagamento__desconto").innerHTML = "".concat(formatarToPercentage2(t.discount), " de desconto"), document.querySelector("#valor__parcelas").innerHTML = toBRLString(t.monthlyPayment), void (document.querySelector("#base__valor__parcelas").innerHTML = "em ".concat(t.quota, " parcelas")); var t }).catch(function (e) { return console.log(e) }) }; function buildQuery(e, t, a) { return "?value=".concat(e, "&autoType=").concat(t, "&state=").concat(a) } var cltPj = document.getElementById("calculateCltPj"); function enableSimple() { var e = document.getElementById("slct").value; document.getElementById("valor__taxa__juros").disabled = "manualmente" !== e } cltPj && cltPj.addEventListener("click", function () { return calculateCltPj() }); var calculateCltPj = function () { refreshSubmit(); var e = parseFloat(document.getElementById("monthly__salary").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("transportation__ticket").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("meal__ticket").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("other__benefits").value.replace(/\./g, "").replace(",", ".")), n = parseFloat(document.getElementById("valor__taxa__juros").value.replace(/\./g, "").replace(",", ".")), o = document.getElementById("slct").value, c = 0; switch (document.getElementById("table__second__clt__pj").classList.toggle("d-none", !1), o) { case "comercio": c = 4; break; case "industria": case "conservacao": c = 4.5; break; case "manutencao": c = 6; break; case "consultoria": c = 15.5; break; default: c = n }var l = calculateINSSandIRRF(e, 0), i = l.inssVal, u = l.irrfVal, s = calculateThirteenthSalary(e, 1, 0, "1").grossPortion, d = .08 * e, m = i + u, y = e * (c / 100) + 121 + 100, _ = t + a + r + 2 * s + s / 3 + d; ativarResultado(); var p = e + _ - m, g = e - y; if (e <= 6750) { document.querySelector("#mei__renumeracao").innerHTML = e.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }); var v = 0; "comercio" === o || "industria" === o ? (document.querySelector("#mei__desconto").innerHTML = 0 === e ? "-R$ 0,00" : "-".concat(56..toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })), v = e - 56, document.querySelector("#mei__liquida").innerHTML = 0 === e ? "R$ 0,00" : (p + 56).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })) : (document.querySelector("#mei__desconto").innerHTML = 0 === e ? "-R$ 0,00" : "-".concat(61..toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })), v = e - 61, document.querySelector("#mei__liquida").innerHTML = 0 === e ? "R$ 0,00" : (p + 61).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })), document.querySelector("#mei__resultado").innerHTML = 0 === e ? "R$ 0,00" : v.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) } else document.querySelector("#mei__renumeracao").innerHTML = "XÂ³", document.querySelector("#mei__desconto").innerHTML = "XÂ³", document.querySelector("#mei__resultado").innerHTML = "X", document.querySelector("#mei__liquida").innerHTML = "X"; document.querySelector("#clt__renumeracao").innerHTML = e.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#simples__renumeracao").innerHTML = e.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#clt__desconto").innerHTML = "-".concat(m.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })), document.querySelector("#simples__desconto").innerHTML = 0 === e ? "-R$ 0,00" : "-".concat(y.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" })), document.querySelector("#clt__beneficio").innerHTML = 0 === e ? "R$ 0,00" : "".concat(_.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), "â´"), document.querySelector("#clt__resultado").innerHTML = 0 === e ? "R$ 0,00" : p.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#simples__resultado").innerHTML = 0 === e ? "R$ 0,00" : g.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#clt__liquida").innerHTML = 0 === e ? "R$ 0,00" : e.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#simples__liquida").innerHTML = 0 === e ? "R$ 0,00" : (p + y).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }, calcularCorrecaoIndices = function () { refreshSubmit(); var e = document.getElementById("valor_correcao").value, t = document.getElementById("data__inicio").value, a = document.getElementById("data__fim").value, r = document.querySelector(".select__correcao__indice").value; e = parseFloat(e.replace(/\./g, "").replace(",", ".")), t = t.slice(0, -2) + "01", fetch("https://api.idinheiro.com.br/series-temporais/".concat(r, "/valores?dataInicio=").concat(t, "&dataFim=").concat(a)).then(function (e) { return e.json() }).then(function (t) { var a = e; t.sort(function (e, t) { return e.data.slice(0, 7).localeCompare(t.data.slice(0, 7)) }); var r = document.getElementById("tabela__mensal"); r.innerHTML = ""; for (var n = 0; n < t.length; n += 1) { var o = a * (parseFloat(t[n].valor) / 100), c = "".concat(t[n].data.slice(5, 7), "/").concat(t[n].data.slice(0, 4)); r.innerHTML += "\n       <tr>\n         <td><span>".concat(n + 1, "</span></td>\n         <td><span>").concat(c, "</span></td>\n         <td><span>").concat(a.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), "</span></td>\n         <td><span>").concat(t[n].valor.toString().replace(".", ","), "</span></td>\n         <td><span>").concat(o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), "</span></td>\n         <td><span>").concat((a + o).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), "</span></td>\n       </tr>\n       "), a += o } ativarResultado(), document.querySelector(".valor__corrigido").innerHTML = a.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), show(document.querySelectorAll(".result-calc-collapse__button")) }).catch(function (e) { return console.log(e) }) }, idCorrection = document.getElementById("calculatorCorrectionSavings"); if (idCorrection) { var today = document.getElementById("data__final"); today.max = (new Date).toISOString().split("T")[0], idCorrection.addEventListener("click", function () { return calculatorCorrectionSavings() }) } var calculatorCorrectionSavings = function () { refreshSubmit(); var e = moment(document.getElementById("data__inicio").value), t = moment(document.getElementById("data__final").value), a = parseFloat(document.getElementById("valor__corrigido").value.replace(/\./g, "").replace(",", ".")), r = document.getElementById("correcao__nova"), n = document.getElementById("correcao__antiga"), o = e.date(), c = t.date(), l = e.year(), i = t.year(), u = t.month() + 1, s = [], d = [], m = function (r) { fetch("https://api.idinheiro.com.br/series-temporais/".concat(r)).then(function (e) { return e.json() }).then(function (r) { var n = r.valores.find(function (e) { return e.ano == l }), m = r.valores.find(function (e) { return e.ano == i }), y = function (e, t) { var a; if (29 === o || 30 === o || 31 === o) { var r = t.set("date", 28); a = e.valores.find(function (e) { return e.data === r.format("YYYY-MM-DD") + "T00:00:00.000Z" }) } else a = e.valores.find(function (e) { return e.data === t.format("YYYY-MM-DD") + "T00:00:00.000Z" }); return a }(n, e), _ = function (e, a) { var n, o = r.valores.find(function (e) { return e.ano == i - 1 }); if (1 === u) if (29 === c || 30 === c || 31 === c) { var l = a.set("date", 28); n = o.valores.find(function (e) { return e.dataFim === l.format("YYYY-MM-DD") + "T00:00:00.000Z" }) } else n = o.valores.find(function (e) { return e.dataFim === t.format("YYYY-MM-DD") + "T00:00:00.000Z" }); if (1 !== u) if (29 === c || 30 === c || 31 === c) { var s = a.set("date", 28); n = e.valores.find(function (e) { return e.dataFim === s.format("YYYY-MM-DD") + "T00:00:00.000Z" }) } else n = e.valores.find(function (e) { return e.dataFim === a.format("YYYY-MM-DD") + "T00:00:00.000Z" }); return n }(m, t), p = moment(y.data).valueOf(), g = moment(_.dataFim).valueOf(); r.valores.filter(function (e) { return e.ano >= l & e.ano <= i && s.push(e.valores) }), s.reduce(function (e, a) { a.filter(function (e) { var a = moment(e.data).valueOf(); if (a >= p && a <= g) { var r = _slicedToArray(e.data.split("-"), 3), n = (r[0], r[1], _slicedToArray(r[2].split("T"), 2)), l = n[0]; n[1]; if (Number(l) === (o > 28 ? 28 : o)) { var i = c > 28 ? t.set("date", 28) : t; if (c > 28) { var u = moment(e.data).diff(i, "days"); if ((u *= -1) > 27) return e } else { var s = moment(e.data).diff(i, "days"); if ((s *= -1) >= 30) return e } } } }).map(function (e) { return d.push(parseFloat(e.valor)) }) }, []); var v = d.reduce(function (e, t) { return 0 === e ? 1 + t / 100 : e * (1 + t / 100) }, 0), S = (100 * (v - 1)).toFixed(6), L = a * v, f = L - a, B = (100 * (Math.pow(v, 1 / d.length) - 1)).toFixed(2), h = (100 * (Math.pow(v, 12 / d.length) - 1)).toFixed(2); ativarResultado(), document.querySelector("#percentual").innerHTML = "".concat(S.replace(".", ","), "%"), document.querySelector("#corrigido").innerHTML = L.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#aplicado").innerHTML = a.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#juros").innerHTML = f.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#anual").innerHTML = "".concat(h.replace(".", ","), "% a.a"), document.querySelector("#mensal").innerHTML = "".concat(B.replace(".", ","), "% a.m") }) }; if (r.checked) { var y = document.querySelector(".input__calculadora__error"); l >= 2012 ? m("Poup.195") : (y.classList.toggle("d-block", !0), setTimeout(function () { y.classList.toggle("d-block", !1) }, 4e3)) } n.checked && m("Poup.25") }, idCostEmployee = document.getElementById("calculateCostEmployee"); idCostEmployee && idCostEmployee.addEventListener("click", function () { return calculatorCostEmployee() }); var calculatorCostEmployee = function () { refreshSubmit(); var e = parseFloat(document.getElementById("monthly__salary").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("health__plan").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("transportation__ticket").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("meal__ticket").value.replace(/\./g, "").replace(",", ".")), n = parseFloat(document.getElementById("other__benefits").value.replace(/\./g, "").replace(",", ".")), o = a <= .06 * e ? a : .06 * e, c = e / 12, l = e / 12 / 3, i = .08 * e, u = .08 * (c + l), s = .2 * e, d = .2 * (c + l), m = e + t + a + r + n + c + l + i + u + s + d; ativarResultado(), document.getElementById("value__salary").innerHTML = convertIfExistsOrReturnZero(e), document.getElementById("value__transportation__ticket").innerHTML = convertIfExistsOrReturnZero(a), document.getElementById("value__transportation__ticket__discount").innerHTML = convertIfExistsOrReturnZero(-1 * o), document.getElementById("value__meal__ticket").innerHTML = convertIfExistsOrReturnZero(r), document.getElementById("value__health__plan").innerHTML = convertIfExistsOrReturnZero(t), document.getElementById("value__other__benefits").innerHTML = convertIfExistsOrReturnZero(n), document.getElementById("value__provision__thirteen").innerHTML = convertIfExistsOrReturnZero(c), document.getElementById("value__provision__third__holiday").innerHTML = convertIfExistsOrReturnZero(l), document.getElementById("value__fgts").innerHTML = convertIfExistsOrReturnZero(i), document.getElementById("value__provision__fgts__thirteen__holiday").innerHTML = convertIfExistsOrReturnZero(u), document.getElementById("value__inss").innerHTML = convertIfExistsOrReturnZero(s), document.getElementById("value__provision__inss__thirteen__holiday").innerHTML = convertIfExistsOrReturnZero(d), document.getElementById("value__cost").innerHTML = convertIfExistsOrReturnZero(m) }; function convertIfExistsOrReturnZero(e) { return e ? e.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00" } function decimoTerceiro() { ativarResultado(); var e = document.querySelector("#salario__bruto").value, t = document.querySelector("#horas__extras").value, a = parseInt(document.querySelector("#numero__dependente").value), r = parseInt(document.querySelector("#meses__trabalhados").value); r = r > 12 ? 12 : r; var n = document.querySelector("#slct").value, o = parseFloat(e.replace(/\./g, "").replace(",", ".")), c = parseFloat(t.replace(/\./g, "").replace(",", ".")), l = calculateThirteenthSalary(o, c, r, a, n), i = l.grossPortion, u = l.grossExtraPortion, s = l.inssLabel, d = l.inssVal, m = l.irrfVal, y = l.total, _ = d + m, p = i + u, g = "".concat((m / p * 100).toFixed(2), "%"), v = "".concat((d / p * 100).toFixed(2), "%"); document.getElementById("horas__extras__row").style.display = c && 0 != c ? "" : "none", document.querySelector("#salario__proventos").innerHTML = toBRLString(i), document.querySelector("#horas__extras__resultado").innerHTML = toBRLString(u), document.querySelector("#inss").innerHTML = checkIfExistsAndReturnWithComma(s, v), document.querySelector("#inss__desconto").innerHTML = checkIfExistsAndReturnCurrency(s, d), document.querySelector("#irff__ref").innerHTML = checkIfExistsAndReturnWithComma(s, g), document.querySelector("#irff__desconto").innerHTML = checkIfExistsAndReturnCurrency(s, Math.round(100 * m) / 100), document.querySelector("#total__desconto").innerHTML = checkIfExistsAndReturnCurrency(s, _), document.querySelector("#total__salario").innerHTML = toBRLString(p), document.querySelector("#valor__liquido").innerHTML = toBRLString(y) } function toBRLString(e) { return e.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } function checkIfExistsAndReturnCurrency(e, t) { return "-" === e ? "-" : toBRLString(t) } function checkIfExistsAndReturnWithComma(e, t) { return "-" === e ? "-" : t.replace(".", ",") } var weekdaysDictionary = ["Domingo", "Segunda-Feira", "TerÃ§a-Feira", "Quarta-Feira", "Quinta-Feira", "Sexta-Feira", "SÃ¡bado"]; function calcularDiaDaSemana() { refreshSubmit(); var e = _slicedToArray(convertToDateObjectAndBrasilTemplate(getDateInput()), 2), t = e[0]; buildHTML(e[1], weekdaysDictionary[t.getDay()]), ativarResultado() } function getDateInput() { return document.getElementById("data__dia__semana").value } function convertToDateObjectAndBrasilTemplate(e) { var t = e.slice(0, 4), a = parseInt(e.slice(5, 7)), r = e.slice(-2), n = "".concat(r, "/").concat(a, "/").concat(t); return [new Date(t, a - 1, r), n] } function buildHTML(e, t) { var a = document.querySelector(".dia__semana__resultado"); a.innerHTML = "", a.innerHTML = "".concat(e, " - ").concat(t) } function calcularDiasUteis() { refreshSubmit(), moment.locale("pt-br"); var e = document.getElementById("data__util__inicio").value, t = document.getElementById("data__util__final").value, a = moment(e), r = moment(t); ativarResultado(); var n = moment(e).locale("pt-br"), o = moment(t).locale("pt-br"), c = feriadosNacionais(n), l = feriadosNacionais(o), i = a.day(), u = r.day(), s = r.diff(a, "days"), d = 0, m = 0; 6 === u && d++, 0 === u && m++, 0 === i && m++, 0 === i && 0 === u && m--; for (var y = 1; y <= s; y++)6 === i ? i = 0 & d++ : i++, 0 === i && m++; var _ = s - (d + m), p = 0, g = 0; if (c.feriados.map(function (t) { e === t.data && p++; var n = moment(t.data).format("YYYY-MM-DD"), o = a.format("YYYY-MM-DD"), c = r.format("YYYY-MM-DD"), l = moment(n).isBetween(o, c); !0 === l && p++, l && (0 === moment(n).day() && g++, 6 === moment(n).day() && g++) }), a.year() !== r.year()) { l.feriados.map(function (e) { t === e.data && p++; var a = moment(e.data).format("YYYY-MM-DD"), n = (r.format("YYYY-MM-DD"), moment(a).isBetween(void 0, r)); !0 === n && p++, n && (0 === moment(a).day() && g++, 6 === moment(a).day() && g++) }); var v = r.year() - a.year(); v > 1 && (p += 12 * (v - 1)) } var S = _ - (p - g); document.getElementById("resposta__dias__uteis").innerHTML = S + 1, document.getElementById("resposta__dias__corridos").innerHTML = s + 1, document.getElementById("resposta__sabado").innerHTML = d, document.getElementById("resposta__domingo").innerHTML = m, document.getElementById("resposta__feriados").innerHTML = p } var feriadosNacionais = function (e) { var t = moment(e, "DD/MM/YYYY").year(), a = [], r = moment(t + Easter(t)); return a.push({ data: moment(t + "0101").format("YYYY-MM-DD"), descricao: "ConfraternizaÃ§Ã£o Universal" }), a.push({ data: moment(r).subtract(48, "days").format("YYYY-MM-DD"), descricao: "2Âºferia Carnaval" }), a.push({ data: moment(r).subtract(47, "days").format("YYYY-MM-DD"), descricao: "Carnaval" }), a.push({ data: moment(r).subtract(2, "days").format("YYYY-MM-DD"), descricao: "6Âºfeira Santa" }), a.push({ data: moment(t + "0421").format("YYYY-MM-DD"), descricao: "Tiradentes" }), a.push({ data: moment(t + "0501").format("YYYY-MM-DD"), descricao: "Dia do Trabalhador" }), a.push({ data: moment(r).add(60, "days").format("YYYY-MM-DD"), descricao: "Corpus Cirist" }), a.push({ data: moment(t + "0907").format("YYYY-MM-DD"), descricao: "Dia da IndependÃªncia" }), a.push({ data: moment(t + "1012").format("YYYY-MM-DD"), descricao: "N. S. Aparecida" }), a.push({ data: moment(t + "1102").format("YYYY-MM-DD"), descricao: "Todos os santos" }), a.push({ data: moment(t + "1115").format("YYYY-MM-DD"), descricao: "ProclamaÃ§Ã£o da RepÃºblica" }), a.push({ data: moment(t + "1225").format("YYYY-MM-DD"), descricao: "Natal" }), { feriados: a } }; function Easter(e) { var t = Math.floor(e / 100), a = e - 19 * Math.floor(e / 19), r = Math.floor((t - 17) / 25), n = t - Math.floor(t / 4) - Math.floor((t - r) / 3) + 19 * a + 15; n -= 30 * Math.floor(n / 30), n -= Math.floor(n / 28) * (1 - Math.floor(n / 28) * Math.floor(29 / (n + 1)) * Math.floor((21 - a) / 11)); var o = e + Math.floor(e / 4) + n + 2 - t + Math.floor(t / 4), c = n - (o -= 7 * Math.floor(o / 7)), l = 3 + Math.floor((c + 40) / 44), i = c + 28 - 31 * Math.floor(l / 4); return padout(l) + "" + padout(i) } function padout(e) { return e < 10 ? "0" + e : e } var idDifferenceDatas = document.getElementById("calculate__difference__dates"); idDifferenceDatas && idDifferenceDatas.addEventListener("click", function () { return calculateDifferenceData() }); var calculateDifferenceData = function () { refreshSubmit(), moment.locale("pt-br"); var e = document.getElementById("data__util__inicio").value, t = document.getElementById("data__util__final").value, a = moment(e), r = moment(t).diff(a, "days"); ativarResultado(), document.getElementById("resposta__dias__corridos").innerHTML = r }, calculateRatesButton = document.getElementById("calculateEquivalentRates"); function equivalentRates() { var e = document.getElementById("slct"); e && e.addEventListener("change", mudarTaxaSaida); var t = { anual: { convertTo: "ao mÃªs", convertInput: "mensal", convertFunc: function (e) { var t = e / 100; return t += 1, t = Math.pow(t, 1 / 12), t -= 1, t *= 100 } }, mensal: { convertTo: "ao ano", convertInput: "anual", convertFunc: function (e) { var t = e / 100; return t += 1, t = Math.pow(t, 12), t -= 1, t *= 100 } } }; var a = e.value, r = document.getElementById("valor__taxa__juros").value; r = r.slice(0, -1); var n = parseFloat(r.replace(/\./g, "").replace(",", ".")); ativarResultado(); var o = t[a].convertFunc(n), c = "".concat(o.toFixed(2).replace(".", ","), "%"); document.getElementById("taxa__texto").innerHTML = "A taxa ".concat(a, " de ").concat(r, " equivale a ").concat(c, " ").concat(t[a].convertTo, "."), document.getElementById("taxa__texto").style.padding = "10px" } function mudarTaxaSaida() { document.getElementById("slct2").value = options[selectEntrada.value].convertInput } calculateRatesButton && calculateRatesButton.addEventListener("click", equivalentRates); var holidayDictionary = { 2004: { Carnaval: new Date(2004, 1, 24), SextaFeiraSanta: new Date(2004, 3, 9), Pascoa: new Date(2004, 3, 11), CorpusChristi: new Date(2004, 5, 10) }, 2005: { Carnaval: new Date(2005, 1, 8), SextaFeiraSanta: new Date(2005, 2, 25), Pascoa: new Date(2005, 2, 27), CorpusChristi: new Date(2005, 4, 26) }, 2006: { Carnaval: new Date(2006, 1, 28), SextaFeiraSanta: new Date(2006, 3, 14), Pascoa: new Date(2006, 3, 16), CorpusChristi: new Date(2006, 5, 15) }, 2007: { Carnaval: new Date(2007, 1, 20), SextaFeiraSanta: new Date(2007, 3, 6), Pascoa: new Date(2007, 3, 8), CorpusChristi: new Date(2007, 5, 7) }, 2008: { Carnaval: new Date(2008, 1, 5), SextaFeiraSanta: new Date(2008, 2, 21), Pascoa: new Date(2008, 2, 23), CorpusChristi: new Date(2008, 4, 22) }, 2009: { Carnaval: new Date(2009, 1, 24), SextaFeiraSanta: new Date(2009, 3, 10), Pascoa: new Date(2009, 3, 12), CorpusChristi: new Date(2009, 5, 11) }, 2010: { Carnaval: new Date(2010, 1, 16), SextaFeiraSanta: new Date(2010, 3, 2), Pascoa: new Date(2010, 3, 4), CorpusChristi: new Date(2010, 5, 3) }, 2011: { Carnaval: new Date(2011, 2, 8), SextaFeiraSanta: new Date(2011, 3, 22), Pascoa: new Date(2011, 3, 24), CorpusChristi: new Date(2011, 5, 23) }, 2012: { Carnaval: new Date(2012, 1, 21), SextaFeiraSanta: new Date(2012, 3, 6), Pascoa: new Date(2012, 3, 8), CorpusChristi: new Date(2012, 5, 7) }, 2013: { Carnaval: new Date(2013, 1, 12), SextaFeiraSanta: new Date(2013, 2, 29), Pascoa: new Date(2013, 2, 31), CorpusChristi: new Date(2013, 4, 30) }, 2014: { Carnaval: new Date(2014, 2, 4), SextaFeiraSanta: new Date(2014, 3, 18), Pascoa: new Date(2014, 3, 20), CorpusChristi: new Date(2014, 5, 19) }, 2015: { Carnaval: new Date(2015, 1, 17), SextaFeiraSanta: new Date(2015, 3, 3), Pascoa: new Date(2015, 3, 5), CorpusChristi: new Date(2015, 5, 4) }, 2016: { Carnaval: new Date(2016, 1, 9), SextaFeiraSanta: new Date(2016, 2, 25), Pascoa: new Date(2016, 2, 27), CorpusChristi: new Date(2016, 4, 26) }, 2017: { Carnaval: new Date(2017, 1, 28), SextaFeiraSanta: new Date(2017, 3, 14), Pascoa: new Date(2017, 3, 16), CorpusChristi: new Date(2017, 5, 15) }, 2018: { Carnaval: new Date(2018, 1, 13), SextaFeiraSanta: new Date(2018, 2, 30), Pascoa: new Date(2018, 3, 1), CorpusChristi: new Date(2018, 4, 31) }, 2019: { Carnaval: new Date(2019, 2, 5), SextaFeiraSanta: new Date(2019, 3, 19), Pascoa: new Date(2019, 3, 21), CorpusChristi: new Date(2019, 5, 20) }, 2020: { Carnaval: new Date(2020, 1, 25), SextaFeiraSanta: new Date(2020, 3, 10), Pascoa: new Date(2020, 3, 12), CorpusChristi: new Date(2020, 5, 11) }, 2021: { Carnaval: new Date(2021, 1, 16), SextaFeiraSanta: new Date(2021, 3, 2), Pascoa: new Date(2021, 3, 4), CorpusChristi: new Date(2021, 5, 3) }, 2022: { Carnaval: new Date(2022, 2, 1), SextaFeiraSanta: new Date(2022, 3, 15), Pascoa: new Date(2022, 3, 17), CorpusChristi: new Date(2022, 5, 16) }, 2023: { Carnaval: new Date(2023, 1, 21), SextaFeiraSanta: new Date(2023, 3, 7), Pascoa: new Date(2023, 3, 9), CorpusChristi: new Date(2023, 5, 8) }, 2024: { Carnaval: new Date(2024, 1, 13), SextaFeiraSanta: new Date(2024, 2, 29), Pascoa: new Date(2024, 2, 31), CorpusChristi: new Date(2024, 4, 30) }, 2025: { Carnaval: new Date(2025, 2, 4), SextaFeiraSanta: new Date(2025, 3, 18), Pascoa: new Date(2025, 3, 20), CorpusChristi: new Date(2025, 5, 19) }, 2026: { Carnaval: new Date(2026, 1, 17), SextaFeiraSanta: new Date(2026, 3, 3), Pascoa: new Date(2026, 3, 5), CorpusChristi: new Date(2026, 5, 4) }, 2027: { Carnaval: new Date(2027, 1, 9), SextaFeiraSanta: new Date(2027, 2, 26), Pascoa: new Date(2027, 2, 28), CorpusChristi: new Date(2027, 4, 27) }, 2028: { Carnaval: new Date(2028, 1, 29), SextaFeiraSanta: new Date(2028, 3, 14), Pascoa: new Date(2028, 3, 16), CorpusChristi: new Date(2028, 5, 15) }, 2029: { Carnaval: new Date(2029, 1, 13), SextaFeiraSanta: new Date(2029, 2, 30), Pascoa: new Date(2029, 3, 1), CorpusChristi: new Date(2029, 4, 31) }, 2030: { Carnaval: new Date(2030, 2, 5), SextaFeiraSanta: new Date(2030, 3, 19), Pascoa: new Date(2030, 3, 21), CorpusChristi: new Date(2030, 5, 20) } }, holidayTitles = ["Carnaval", "Sexta-feira santa", "PÃ¡scoa", "Corpus Christi", "Dia das MÃ£es", "Dia dos Pais"]; function feriadosMoveis() { refreshSubmit(); var e = getCurrentSelectedYear(), t = getHolidaysFromDicionario(e); addMothersAndFathersHolidays(t, e), buildResultsHTML(t), ativarResultado() } function getCurrentSelectedYear() { return document.querySelector(".feriados__moveis__ano__select").value } function getHolidaysFromDicionario(e) { var t = []; return Object.values(holidayDictionary[e]).forEach(function (e) { t.push(dateObjectToString(e)) }), t } function dateObjectToString(e) { var t = e.getFullYear(), a = e.getMonth(), r = e.getDate(); return "".concat(r, "/").concat(a + 1, "/").concat(t) } function addMothersAndFathersHolidays(e, t) { var a = getParentDate(t, 7), r = getParentDate(t, 4); e.push(dateObjectToString(r)), e.push(dateObjectToString(a)) } function getParentDate(e, t) { var a = new Date(e, t, 7); return a.setDate(7 - a.getDay() + 7), a } function buildResultsHTML(e) { var t = document.querySelector(".feriados__moveis__tabela__resultados"); t.innerHTML = "", holidayTitles.forEach(function (a, r) { var n = "\n    <tr>\n      <td><span>".concat(a, "</span></td>\n      <td><span>").concat(e[r], "</span></td>\n    </tr>"); t.innerHTML += n }) } function ferias() { ativarResultado(); var e = document.querySelector("#salario__bruto").value, t = document.querySelector("#media__hora").value, a = parseInt(document.querySelector("#numero__dependentes").value), r = parseInt(document.querySelector("#dias__ferias").value), n = document.querySelector(".abono__pecuniario").value, o = document.querySelector(".adiantar").value, c = parseFloat(e.replace(/\./g, "").replace(",", ".")), l = parseFloat(t.replace(/\./g, "").replace(",", ".")), i = (c + l) / 30 * r, u = i / 3, s = i + u, d = "2" === n, m = "2" === o, y = calculateINSSandIRRF(s, a), _ = y.inssVal, p = y.irrfVal, g = y.totalDiscount; if (document.querySelector("#ferias__proventos").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#inss__desconto").innerHTML = _.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#irff__desconto").innerHTML = p.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#salario__proventos").innerHTML = i.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), d) { var v = (c + l) / 30 * 10, S = document.querySelector(".tr__info--disabled"), L = document.querySelector("#pecuniary__allowance__third"); S.style.display = "table-row", L.style.display = "table-row", document.querySelector("#pecuniary__allowance__value").innerHTML = v.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#pecuniary__allowance__third__value").innerHTML = (v / 3).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), s = s + v + v / 3 } else { var f = document.querySelector(".tr__info--disabled"), B = document.querySelector("#pecuniary__allowance__third"); f.style.display = "none", B.style.display = "none" } if (m) { var h = c / 2; document.querySelector("#parcel__thirteenth").style.display = "table-row", document.querySelector("#parcel__thirteenth__value").innerHTML = h.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), s += h } else { document.querySelector("#parcel__thirteenth").style.display = "none" } var R = (_ / s * 100).toFixed(2).replace(".", ","), T = (p / s * 100).toFixed(2).replace(".", ","); document.querySelector("#inss").innerHTML = "".concat(R, "%"), document.querySelector("#irff__ref").innerHTML = "".concat(T, "%"), document.querySelector("#total__salario").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__desconto").innerHTML = g.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#valor__liquido").innerHTML = (s - g).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } function calcularFgts() { refreshSubmit(); var e = document.querySelector("#salario__bruto").value, t = document.querySelector("#saldo__anterior").value, a = document.querySelector("#data__inicial").value, r = document.querySelector("#data__final").value, n = document.querySelector("#calculo__corrigido").checked, o = parseFloat(e.replace(/\./g, "").replace(",", ".")), c = parseFloat(t.replace(/\./g, "").replace(",", ".")); if ("" !== e && "" !== a && "" !== r) { ativarResultado(); var l = calculateFGTS(o, c, a, r, n), i = l.totalMonths, u = l.monthlyFgts, s = l.depositTotal, d = (l.depositsList, l.totalFinal); l.errorLog; document.querySelector("#deposito__mensal").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#meses__contribuicao").innerHTML = i, document.querySelector("#deposito__total").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#saldo__final").innerHTML = d.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } } var idFinanvingPrice = document.getElementById("calculateFinancingPrice"); idFinanvingPrice && idFinanvingPrice.addEventListener("click", function () { return calculatorFinancingPrice() }); var empty = function (e) { for (; e.children.length;)e.removeChild(e.children[0]) }, tableMap = function (e) { var t = 0, a = 0; e.prestacoes.map(function (e, r) { var n = document.getElementById("price").insertRow(r), o = n.insertCell(0), c = n.insertCell(1), l = n.insertCell(2), i = n.insertCell(3), u = n.insertCell(4); t += e.valorPrestacao, a += e.juros, o.innerHTML = "".concat(r), c.innerHTML = e.valorPrestacao.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), l.innerHTML = e.juros.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), i.innerHTML = e.amortizacao.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), u.innerHTML = e.saldoDevedor.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }), document.querySelector("#pagamento__mensal").innerHTML = e.valorPrestacao.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total__prestacao").innerHTML = (t / 2).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total__juros").innerHTML = (a / 2).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total__amortizacao").innerHTML = (t / 2 - a / 2).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }, showTableList = function (e) { var t = e.data, a = document.getElementById("price"), r = a.getElementsByTagName("tr"); ativarResultado(), show(document.querySelectorAll(".result-calc-collapse__button")), r.length > 0 ? (empty(a), tableMap(t)) : tableMap(t) }, calculatorFinancingPrice = function () { refreshSubmit(); var e = document.getElementById("taxa__juro__periodo").value, t = ["financiamento", "entrada", "taxa__juros", "periodo"].map(function (e) { return parseFloat(document.getElementById("valor__".concat(e)).value.replace(/\./g, "").replace(",", ".")) }), a = Math.pow(1 + t[2] / 100, 1 / 12) - 1, r = "anual" === e ? 100 * a : t[2], n = { valor: t[0], valorEntrada: t[1], numeroPrestacoes: t[3], taxaJuros: r }; fetch("https://d1nq69jlyrm6zc.cloudfront.net/api/v1/calculadoras/financiamento-price", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(n) }).then(function (e) { return e.json() }).then(function (e) { return showTableList(e) }).catch(function (e) { return console.log(e) }) }, calculatorSac = document.getElementById("calculateFinancingSac"); calculatorSac && calculatorSac.addEventListener("click", function () { return calculateSac() }); var resetTable = function (e) { for (; e.children.length;)e.removeChild(e.children[0]) }, newTable = [], totalJuros = 0, calculateSac = function () { refreshSubmit(), totalJuros = 0; var e = parseFloat(document.getElementById("valor__financiamento").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("valor__entrada").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("valor__taxa__juros").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("valor__periodo").value.replace(/\./g, "").replace(",", ".")) || 1, n = "anos" === document.getElementById("periodo__em").value ? 12 * r : r, o = document.getElementById("sac"), c = o.getElementsByTagName("tr"); ativarResultado(), show(document.querySelectorAll(".result-calc-collapse__button")), c.length > 0 ? (resetTable(o), tableSac(e, t, a, n, o)) : tableSac(e, t, a, n, o) }, tableSac = function (e, t, a, r, n) { var o = e - t, c = parseFloat((o / r).toFixed(2)), l = 1 + a / 100, i = parseFloat(Math.pow(l, 1 / 12) - 1); newTable = []; for (var u = o, s = 0; s <= r + 1; s++)if (0 === s) newTable.push({ prestacao: "R$ 0,00", juros: "R$ 0,00", "amortizaÃ§Ã£o": "R$ 0,00", saldo: o }); else { var d = parseFloat((u * i).toFixed(2)), m = c + d; totalJuros += d, newTable.push({ prestacao: m.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), juros: d.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), "amortizaÃ§Ã£o": parseFloat(c).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), saldo: u -= c }) } newTable.map(function (e, t) { var a = n.insertRow(t), r = a.insertCell(0), o = a.insertCell(1), c = a.insertCell(2), l = a.insertCell(3), i = a.insertCell(4); r.innerHTML = "".concat(t), o.innerHTML = e.prestacao, c.innerHTML = e.juros, l.innerHTML = e.amortizaçao, i.innerHTML = e.saldo < 0 ? "R$ 0,00" : parseFloat(e.saldo).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }), document.querySelector("#primeira").innerHTML = newTable[1].prestacao, document.querySelector("#segundo").innerHTML = newTable[newTable.length - 2].prestacao, document.querySelector("#total__prestacao").innerHTML = (o + totalJuros).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total__juros").innerHTML = totalJuros.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total__amortizacao").innerHTML = o.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }, financiamentoVeiculo = function () { refreshSubmit(), ativarResultado(); for (var e = ["veiculo", "entrada", "taxa__juros", "periodo"].map(function (e) { return parseFloat(document.getElementById("valor__".concat(e)).value.replace(/\./g, "").replace(",", ".")) }), t = document.querySelector("#taxa__juro__periodo").value, a = document.querySelector("#periodo__em").value, r = e[0], n = e[1], o = "anual" === t ? e[2] / 12 / 100 : e[2] / 100, c = e[3], l = "anos" === a ? 12 * c : c, i = 1 / ((1 - Math.pow(1 + o, -l)) / o / (r - n)), u = 0, s = r - n, d = 0; d < l; d++) { var m = s * o; s -= i - m, u += m } var y = r - n + u; document.getElementById("pagamento__mensal").innerHTML = i ? i.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.getElementById("valor__financiado").innerHTML = (r - n).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("juros__acumulados").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("total").innerHTML = y.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, refreshSubmit = function () { document.querySelector(".container__input__calculadora").addEventListener("submit", function (e) { e.preventDefault() }) }, INSS = [{ percent: 7.5, minValue: 0, maxValue: 1100, range: 1 }, { percent: 9, minValue: 1100.01, maxValue: 2203.48, range: 2 }, { percent: 12, minValue: 2203.49, maxValue: 3305.22, range: 3 }, { percent: 14, minValue: 3305.23, maxValue: 6433.57, range: 4 }, { percent: null, minValue: 6433.58, maxValue: 1 / 0, range: 5 }], IRRF = [{ percent: 0, parcelTax: 0, minValue: 0, maxValue: 1903.98 }, { percent: 7.5, parcelTax: 142.8, minValue: 1903.99, maxValue: 2826.65 }, { percent: 15, parcelTax: 354.8, minValue: 2826.66, maxValue: 3751.05 }, { percent: 22.5, parcelTax: 636.13, minValue: 3751.06, maxValue: 4664.68 }, { percent: 27.5, parcelTax: 869.36, minValue: 4664.69, maxValue: null }], VALUE_DISCOUNT_FIX = 751.99, VALUE_DEPENDENT_DEDUCTIONS = 189.59, WORKING_DAYS_MONTH = 21, VALUE_OLD_INTEREST_FGTS = .03, VALUE_NEW_INTEREST_FGTS = .06, VALUE_CDI = .064, VALUE_IPCA = .0453, VALUE_TR = 0, salaryMinimum = [{ day: 1, month: 1, year: 2021, salary: 1100 }, { day: 1, month: 2, year: 2020, salary: 1045 }, { day: 1, month: 1, year: 2020, salary: 1039 }, { day: 1, month: 1, year: 2019, salary: 998 }, { day: 1, month: 1, year: 2018, salary: 954 }, { day: 1, month: 1, year: 2017, salary: 937 }, { day: 1, month: 1, year: 2016, salary: 880 }, { day: 1, month: 1, year: 2015, salary: 788 }, { day: 1, month: 1, year: 2014, salary: 724 }, { day: 1, month: 1, year: 2013, salary: 678 }, { day: 1, month: 1, year: 2012, salary: 622 }, { day: 1, month: 3, year: 2011, salary: 545 }, { day: 1, month: 1, year: 2011, salary: 540 }, { day: 1, month: 1, year: 2010, salary: 510 }, { day: 1, month: 2, year: 2009, salary: 465 }, { day: 1, month: 3, year: 2008, salary: 415 }, { day: 1, month: 4, year: 2007, salary: 380 }, { day: 1, month: 4, year: 2006, salary: 350 }, { day: 1, month: 5, year: 2005, salary: 300 }, { day: 1, month: 5, year: 2004, salary: 260 }, { day: 1, month: 4, year: 2003, salary: 240 }, { day: 1, month: 4, year: 2002, salary: 200 }, { day: 1, month: 4, year: 2001, salary: 180 }, { day: 3, month: 4, year: 2e3, salary: 151 }, { day: 1, month: 5, year: 1999, salary: 136 }, { day: 1, month: 5, year: 1998, salary: 130 }, { day: 1, month: 5, year: 1997, salary: 120 }, { day: 1, month: 5, year: 1996, salary: 112 }, { day: 1, month: 5, year: 1995, salary: 100 }, { day: 1, month: 9, year: 1994, salary: 70 }, { day: 1, month: 7, year: 1994, salary: 64.79 }], calculateInsalubrity = function (e, t) { var a = salaryMinimum.filter(function (a) { return a.year == t && a.month <= e }), r = []; return salaryMinimum.filter(function (a) { if (a.year == t && a.month > e) { var n = t - 1; return r = salaryMinimum.filter(function (e) { return e.year == n }) } }), { data: a.length > 0 ? a[0] : r[0] } }; function formatar(e) { var t = e.value.replace(/\D/g, ""); t = (t = (t = (t / 100).toFixed(2) + "").replace(".", ",")).replace(/\B(?=(\d{3})+(?!\d))/g, "."), e.value = t } function formatarToPercentage(e) { var t = e.value.replace(/\D/g, ""); t = (t = (t = (t / 100).toFixed(2) + "%").replace(".", ",")).replace(/\B(?=(\d{3})+(?!\d))/g, "."), e.value = t } function formatarToPercentage2(e) { return "".concat(e.toFixed(2).replace(".", ","), "%") } var calcularINSS = function (e) { var t = INSS.filter(function (t) { return t.minValue <= e && e <= t.maxValue })[0], a = INSS[0].maxValue * (INSS[0].percent / 100), r = (INSS[1].maxValue - INSS[0].maxValue) * (INSS[1].percent / 100), n = (INSS[2].maxValue - INSS[1].maxValue) * (INSS[2].percent / 100), o = 0; switch (t.range) { case 1: o = t.percent / 100 * e; break; case 2: o = a + (e - INSS[0].maxValue) * (INSS[1].percent / 100); break; case 3: o = a + r + (e - INSS[1].maxValue) * (INSS[2].percent / 100); break; case 4: o = a + r + n + (e - INSS[2].maxValue) * (INSS[3].percent / 100); break; case 5: o = VALUE_DISCOUNT_FIX; break; default: o = 0 }var c = o !== VALUE_DISCOUNT_FIX ? o.toFixed(2) / e : null; return { inssVal: +o.toFixed(2), inssPorcent: +c } }, calculateINSSandIRRF = function (e, t) { var a = calcularINSS(e), r = a.inssVal, n = a.inssPorcent, o = IRRF.filter(function (t) { return t.minValue < e - r && (null === t.maxValue || t.maxValue > e - r) })[0], c = e - r - t * VALUE_DEPENDENT_DEDUCTIONS, l = o && o.percent / 100 || 0, i = o && o.parcelTax || 0, u = Math.max(c * l - i, 0), s = +(r + u).toFixed(2), d = u / c * 100; return { inssVal: r || 0, inssPorcent: n || 0, irrfVal: u || 0, irrfPorcent: l || 0, grossVal: +e.toFixed(2), totalDiscount: s, liquidVal: e - s, aliquotaIrrf: +d.toFixed(2) } }, calculateThirteenthSalary = function (e, t, a, r, n) { var o, c, l, i = e / 12 * a, u = t / 12 * a, s = "1" === n ? i : i / 2, d = "1" === n ? u : u / 2, m = s + d; return o = "2" != n ? null == (c = calculateINSSandIRRF(i + u, r)).inssPorcent ? c.inssPorcent : "".concat((100 * (c.inssPorcent || 0)).toFixed(2), "%") : "-", l = c ? m.toFixed(2) - c.totalDiscount.toFixed(2) : m, _objectSpread(_objectSpread({}, c), {}, { inssLabel: o, grossPortion: s, grossExtraPortion: d, total: l }) }; function percentYearToMonth(e) { return 100 * (Math.pow(e / 100 + 1, 1 / 12) - 1) } function percentMonthToYear(e) { return 100 * (Math.pow(1 + e / 100, 12) - 1) } function calculateCompoundInterest(e, t, a, r) { var n = e, o = _toConsumableArray(Array(r).keys()).map(function () { var e = { interestRate: a, interest: n * a, deposit: t }; return n += e.interest, e.accumulated = n, n += e.deposit, _objectSpread(_objectSpread({}, e), {}, { monthlyTotal: n }) }); return { accumulatedMoney: n, valuesList: o } } var calculateTotalMonthsFGTS = function (e, t, a, r) { var n, o; return { totalMonths: Math.sign(e) !== Math.sign(t) && r ? (n = Math.abs(e)) + (o = Math.abs(t)) : Math.abs(a), firstMonthsPeriod: n, secondMonthsPeriod: o } }, calculateFGTS2 = function (e, t, a, r) { var n, o, c, l = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], i = moment("01/2016", "MM/YYYY"), u = a.diff(i, "months"), s = r.diff(i, "months"), d = a.diff(r, "months"), m = .08 * e, y = calculateTotalMonthsFGTS(u, s, d, l), _ = y.totalMonths, p = y.firstMonthsPeriod, g = y.secondMonthsPeriod; if (a.isAfter(r)) return { errorLog: "Data inicial nÃ£o pode ser maior que data final!" }; if (n = _ * m, l) { var v = percentYearToMonth(VALUE_OLD_INTEREST_FGTS), S = percentYearToMonth(VALUE_NEW_INTEREST_FGTS + VALUE_TR); if (Math.sign(u) === Math.sign(s)) { var L = Math.sign(u) ? calculateCompoundInterest(t, m, -1 === Math.sign(u) ? v : S, _) : {}; o = L.accumulatedMoney || 0, c = L.valuesList || [] } else { var f = calculateCompoundInterest(t, m, v, p), B = f.accumulatedMoney, h = f.valuesList; h.push.apply(h, _toConsumableArray(calculateCompoundInterest(B, m, S, g).valuesList)), o = h[h.length - 1].monthlyTotal, c = h || [] } } else o = t + n; return { totalMonths: _, monthlyFgts: m, depositTotal: n, depositsList: c, totalFinal: +o.toFixed(2) } }, calculateFGTS = function (e, t, a, r) { var n, o, c, l = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], i = _slicedToArray(a.split("/"), 2), u = i[0], s = i[1], d = _slicedToArray(r.split("/"), 2), m = d[0], y = d[1], _ = _slicedToArray("01/2016".split("/"), 2), p = _[0], g = _[1], v = new Date(parseInt(s), parseInt(u - 1)), S = new Date(parseInt(y), parseInt(m)), L = new Date(parseInt(g), parseInt(p) - 1), f = 12 * v.getFullYear() + v.getMonth() - (12 * L.getFullYear() + L.getMonth()), B = 12 * S.getFullYear() + S.getMonth() - (12 * L.getFullYear() + L.getMonth()), h = 12 * S.getFullYear() + S.getMonth() - (12 * v.getFullYear() + v.getMonth()), R = .08 * e, T = calculateTotalMonthsFGTS(f, B, h, l), M = T.totalMonths, b = T.firstMonthsPeriod, I = T.secondMonthsPeriod; if (s > y) return { errorLog: "Data inicial nÃ£o pode ser maior que data final!" }; if (n = M * R, l) { var E = percentYearToMonth(VALUE_OLD_INTEREST_FGTS), F = percentYearToMonth(VALUE_NEW_INTEREST_FGTS + VALUE_TR); if (Math.sign(f) === Math.sign(B)) { var D = Math.sign(f) ? calculateCompoundInterest(t, R, -1 === Math.sign(f) ? E : F, M) : {}; o = D.accumulatedMoney || 0, c = D.valuesList || [] } else { var q = calculateCompoundInterest(t, R, E, b), H = q.accumulatedMoney, w = q.valuesList; w.push.apply(w, _toConsumableArray(calculateCompoundInterest(H, R, F, I).valuesList)), o = w[w.length - 1].monthlyTotal, c = w || [] } } else o = t + n; return { totalMonths: M, monthlyFgts: R, depositTotal: n, depositsList: c, totalFinal: +o.toFixed(2) } }; function checaData() { "2" == document.querySelector("#data__inicial").value.length & document.querySelector("#data__inicial").value <= 12 ? (document.querySelector("#data__inicial").value += "/", document.querySelector("#data__inicial").maxLength = "7") : document.querySelector("#data__inicial").value > 12 && (document.querySelector("#data__inicial").maxLength = "2"), "2" == document.querySelector("#data__final").value.length & document.querySelector("#data__final").value <= 12 ? (document.querySelector("#data__final").value += "/", document.querySelector("#data__final").maxLength = "7") : document.querySelector("#data__final").value > 12 && (document.querySelector("#data__final").maxLength = "2") } function ativarResultado() { show(document.querySelectorAll(".resultado")), show(document.querySelectorAll(".titulo__resultado")); var e = document.getElementById("field_6138d5a9d8442"); e && hide(e); var t = document.getElementById("field_614356a7ea9b2"); t && show(t); var a = document.getElementById("field_6143579b57768"); if (a && show(a), null !== document.getElementById("widget-result-calc-adsense")) { var r = document.getElementById("widget-result-calc-adsense"); r.classList.toggle("d-none", !1); var n = document.createElement("script"); n.src = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1602723282047782", n.async = !0, n.crossorigin = "anonymous", document.body.appendChild(n); r.innerHTML = function () { if (window.innerWidth < 768) return '\n          <ins class="adsbygoogle"\n            style="display:inline-block;width:336px;height:280px"\n            data-ad-client="ca-pub-1602723282047782"\n            data-ad-slot="4251940662">\n          </ins>\n        '; return '\n          <ins class="adsbygoogle"\n            style="display:block"\n            data-ad-client="ca-pub-1602723282047782"\n            data-ad-slot="4251940662"\n            data-ad-format="auto"\n            data-full-width-responsive="true">\n          </ins>\n        ' }(); var o = document.createElement("script"); o.innerHTML = "(adsbygoogle = window.adsbygoogle || []).push({});", document.body.appendChild(o) } null !== document.getElementById("widget-result-calc-others") && document.getElementById("widget-result-calc-others").classList.toggle("d-none", !1) } function fecharResultado() { hide(document.querySelectorAll(".resultado")), hide(document.querySelectorAll(".titulo__resultado")); var e = document.getElementById("field_6138d5a9d8442"); e && show(e); var t = document.getElementById("field_614356a7ea9b2"); t && hide(t); var a = document.getElementById("field_6143579b57768"); a && hide(a); var r = document.getElementById("table__second__clt__pj"); r && r.classList.toggle("d-none", !0), document.getElementById("table__margin__consigned") && (document.getElementById("result__margin__available").innerHTML = "R$ 0,00", document.getElementById("result__margin__allowed").innerHTML = "R$ 0,00", document.getElementById("result__consigned").innerHTML = "R$ 0,00"); var n = document.querySelectorAll(".result__none"); n && [].forEach.call(n, function (e) { e.classList.toggle("d-none", !0) }); var o = document.querySelector(".no__safe"); o && o.classList.toggle("d-block", !1); var c = document.getElementById("widget__resultado__calculadora"); c && c.classList.toggle("d-none", !0); var l = document.querySelectorAll(".obs__error"); l && [].map.call(l, function (e) { return e.classList.toggle("d-none", !0) }) } function show(e) { e = e.length ? e : [e]; for (var t = 0; t < e.length; t++)e[t].style.display = "inline-table" } function hide(e) { e = e.length ? e : [e]; for (var t = 0; t < e.length; t++)e[t].style.display = "none" } var calculateMonths = function (e, t) { var a, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], c = e.isSame(t, "year"), l = t.clone().add(r, "days"), i = n ? l : t, u = c ? e : t.clone().startOf("year"), s = !u.isSame(i, "month"), d = !u.isSame(moment(i).subtract(1, "months"), "month"), m = 0; s && (a = !!c && calculateHiringMonthDays(u, i) > 14, d && (m = calculateFullMonths(u, i))); var y = calculateResigningMonthDays(u, i); return a && m++, y > 14 && m++, (n && 5 === l.weekday() || o && 5 === t.weekday()) && (y += 2), { totalMonths: m, lastWorkedDays: y, terminationDate: l } }, calculateFullMonths = function (e, t) { return t.diff(e, "months") }, calculateResigningMonthDays = function (e, t) { var a = t.clone().startOf("month"), r = a.isAfter(e) ? a : e; return t.diff(r, "days") + 1 }, calculateHiringMonthDays = function (e, t) { var a = e.clone().endOf("month"); return (t.isAfter(a) ? a : t).diff(e, "days") + 1 }, calculateINSS = function (e) { var t = INSS.filter(function (t) { return t.minValue <= e && e <= t.maxValue })[0], a = t && t.percent ? t.percent / 100 : null; return { inssVal: +(t && null != a ? a * e : VALUE_DISCOUNT_FIX).toFixed(2), inssPorcent: a } }, calculateVacations = function (e, t, a, r, n, o, c, l, i, u) { var s = n * o * 4 / 3; if (l) return { unusedVacationDays: n, unusedBalance: s, liquidVal: s }; var d = i ? r.clone() : a.clone(), m = calculateVacationMonths(t, d), y = u && calculateVacationNoticeDays(c) || 0, _ = e * m / 12, p = e * y / 12, g = +(4 * _ / 3).toFixed(2), v = +(4 * p / 3).toFixed(2); return { propByProportion: _, propByNotice: p, monthsByProportion: m, monthsByNotice: y, baseByProportion: g, baseByNotice: v, unusedVacationDays: n, unusedBalance: s, liquidVal: v + g + s } }, calculateVacationMonths = function (e, t) { var a = e.date(), r = t.date(), n = a > 28, o = a > r, c = n ? 28 : a, l = n ? a - 28 : 0, i = t.year(), u = e.isSame(t, "year"), s = moment("".concat(c, "/").concat(e.format("MM"), "/").concat(i), "DD/MM/YYYY"), d = s.clone().subtract(1, "years"), m = moment("".concat(c, "/").concat(t.format("MM/YYYY")), "DD/MM/YYYY"); o && m.subtract(1, "months"); var y = m.isAfter(s) ? s : d, _ = m.diff(y, "months"), p = 0 == _ && u ? 1 : 0; return (o ? t.diff(m, "days") - l : r - a + p) > 14 && _++, _ }, calculateVacationNoticeDays = function (e) { return Math.floor(e / 30) + (e % 30 > 14 ? 1 : 0) }, sumValuesByKeysFromObjects = function (e, t) { return Object.keys(e).reduce(function (a, r) { return +(a += e[r] && e[r][t] || 0).toFixed(2) }, 0) }, sumValuesFromObjects = function (e) { return Object.keys(e).reduce(function (t, a) { return +(t += e[a] || 0).toFixed(2) }, 0) }, calculateRescisao = function (e) { var t, a, r, n, o, c, l, i, u, s, d, m, y, _, p, g, v, S, L = e.grossSalary, f = e.numDependents, B = e.hiringDate, h = e.resigningDate, R = e.reason, T = e.notice, M = e.initialBalance, b = e.unusedVacationDays, I = L / 30, E = 0, F = 0, D = 0; switch (R) { case "demissao-comum-acordo": o = !0, E = 30, F = .2, D = .8; break; case "dispensa-sem-justa-causa": r = !1; var q = h.diff(B, "years"); E = 30 + 3 * (q > 20 ? 20 : q), F = .4, D = 1; break; case "dispensa-com-justa-causa": r = !0; break; case "pedido-demissao": c = !0, E = 30; break; case "exp-no-prazo": u = !0; break; case "exp-antes-prazo": u = !0, F = .4, D = 1; break; case "aposentadoria": u = !0, D = 1; break; case "falecimento": u = !0, F = .4, D = 1 }switch (T) { case "trabalhado": n = !0; break; case "indenizado": l = !0, o && (E = 15); break; case "descumprido": i = !u, 0 == r && (E = void 0), c && (E = 0); break; case "dispensado": E = void 0 }var H = calculateMonths(B, h, E, n, l), w = H.totalMonths, x = H.lastWorkedDays, C = H.terminationDate; C.format("DD/MM/YYYY"), v = { salaryBalance: +(.08 * (s = _objectSpread(_objectSpread({}, calculateINSSandIRRF(x * I, f)), {}, { lastWorkedDays: x })).grossVal).toFixed(2) }, y = calculateVacations(L, B, h, C, b, I, E, r, n, l); var P = moment(B.format("MM/YYYY"), "MM/YYYY"), Y = moment(h.format("MM/YYYY"), "MM/YYYY"); if (g = calculateFGTS2(L, M, P, Y, !0), r && l && (m = { hasZeroValues: !0 }), null == r && i && (_ = { liquidVal: -1 * L }), !r) { if (d = _objectSpread(_objectSpread({}, calculateThirteenthSalary(L, w, f)), {}, { monthsByWork: w }), v.prop13Salary = +(.08 * d.grossVal).toFixed(2), l) { var V = calculateMonths(h, C).totalMonths; m = _objectSpread(_objectSpread({}, calculateThirteenthSalary(L, V, f)), {}, { monthsByNotice: V }); var k = d.grossVal + m.grossVal; v.prop13Salary = +(.08 * k).toFixed(2); var A = +(I * E).toFixed(2), j = calculateINSS(A); p = _objectSpread(_objectSpread({}, j), {}, { grossVal: A, liquidVal: A - j.inssVal }), v.compensatedBalance = +(.08 * A).toFixed(2) } var N = (c ? 30 : E) * I * .08; v.compensatedBalance = +N.toFixed(2) } a = C.format("DD/MM/YYYY"), t = sumValuesByKeysFromObjects({ salaryBalance: s, debtsBalance: _, compensatedBalance: p, prop13Salary: d, notice13Salary: m, vacations: y }, "liquidVal") || 0, v.result = sumValuesFromObjects(v); var O = g && g.monthlyFgts || 0, $ = { initialBalance: M, rescisaoDepositFGTS: v.result, totalWhileWorking: O }; return (S = _objectSpread(_objectSpread({}, $), {}, { depositTotal: sumValuesFromObjects($), penalty: F ? (O + v.result) * F : 0 })).total = S.depositTotal + S.penalty, S.withdrawTotal = S.total * D, { salaryBalance: s, debtsBalance: _, compensatedBalance: p, prop13Salary: d, notice13Salary: m, vacations: y, rescisaoDepositFGTS: v, rescisaoFGTS: S, sumResicao: t, totalWhileWorking: O, isCompensated: l, notWorked: i, noticeDays: E, penaltyRate: F, withdrawRate: D, lastContractDay: a } }; function formatarValorMonetario(e) { var t = (e = 0 === (e = (e = 0 === (e += "").length ? "0,00" : -1 !== e.indexOf(".") && 1 === e.split(".")[1].length ? "".concat(e, "0") : e).replace(/(?!^-)[^0-9]/g, "")).length ? "0,00" : 1 === e.length ? "0,0".concat(e) : 2 === e.length ? "0,".concat(e) : "".concat(e.slice(0, e.length - 2), ",").concat(e.slice(e.length - 2))).split(","), a = parseInt(t[0], 10).toString(); return e = "".concat(a.split(/(?=(?:...)*$)/).join("."), ",").concat(t[1] || "") } var rate = function (e, t, a, r, n, o) { r = void 0 === r ? 0 : r; var c = o = void 0 === o ? .1 : o; n = (n = void 0 === n ? 0 : n) ? 1 : 0; for (var l = 0; l < 20; l++) { var i = void 0, u = void 0; if (i = Math.abs(c) < 1e-10 ? a * (1 + e * c) + t * (1 + c * n) * e + r : a * (u = Math.pow(1 + c, e)) + t * (1 / c + n) * (u - 1) + r, Math.abs(i) < 1e-10) return c; var s = void 0; if (Math.abs(c) < 1e-10) s = a * e + t * n * e; else { u = Math.pow(1 + c, e); var d = e * Math.pow(1 + c, e - 1); s = a * d + t * (1 / c + n) * d + t * (-1 / (c * c)) * (u - 1) } c -= i / s } return c }, calculateExtra = function () { refreshSubmit(), ativarResultado(); var e = { salary: parseFloat(document.getElementById("salario__bruto").value.replace(/\./g, "").replace(",", ".")), monthHours: parseFloat(document.getElementById("month__work").value), hoursExtra: parseFloat(document.getElementById("extra__hours").value), hoursExtraSun: parseFloat(document.getElementById("extra__hours__sun").value), hoursExtraNight: parseFloat(document.getElementById("extra__hours__night").value) }, t = e.salary, a = e.monthHours, r = e.hoursExtra, n = e.hoursExtraSun, o = e.hoursExtraNight, c = 0 === t || 0 === a ? 0 : t / a, l = (.5 * c + c).toFixed(2), i = 2 * c, u = c + .2 * c, s = u + .5 * u, d = l * r, m = i * n, y = s * o, _ = t + d + m + y; document.getElementById("value__hours").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("Value__extra__hours").innerHTML = l.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__extra__sun").innerHTML = i.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__extra__night").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__total__hours").innerHTML = d.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__total__sun").innerHTML = m.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__total__night").innerHTML = y.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__total").innerHTML = _.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, calculatorIMC = document.getElementById("calculatorImc"); calculatorIMC && calculatorIMC.addEventListener("click", function () { return calculateImc() }); var calculateImc = function () { refreshSubmit(), ativarResultado(); var e = parseFloat(document.getElementById("peso").value.replace(/\./g, "").replace(",", ".")) || 0, t = parseFloat(document.getElementById("altura").value.replace(/\./g, "").replace(",", ".")) || 1, a = (e / (t * t)).toFixed(2), r = parseFloat(a), n = ""; r < 18.5 ? n = "IMC abaixo de 18,5 - SubnutriÃ§Ã£o" : r >= 18.5 && r < 25 ? n = "IMC entre 18,6 e 24,9 - Peso SaudÃ¡vel" : r >= 25 && r < 30 ? n = "IMC entre 25,0 e 29,9 - Sobrepeso" : r >= 30 && r < 35 ? n = "IMC entre 30,0 e 34,9 - Obesidade grau 1" : r >= 35 && r < 40 ? n = "IMC entre 35,0 e 39,9 - Obesidade grau 2" : r >= 40 && (n = "IMC a partir de 40 - Obesidade grau 3"), document.getElementById("imc__final").innerHTML = r, document.getElementById("resultado__final").innerHTML = n }, idIrrf = document.getElementById("income__tax"); idIrrf && idIrrf.addEventListener("click", function () { return calculatorIncomeTax() }); var calculatorIncomeTax = function () { refreshSubmit(); var e = document.getElementById("salario__bruto").value, t = document.getElementById("numero__dependente").value, a = parseFloat(e.replace(/\./g, "").replace(",", ".")), r = parseInt(t), n = calculateINSSandIRRF(a, r), o = n.irrfVal, c = n.irrfPorcent, l = (100 * c).toFixed(2); ativarResultado(), document.getElementById("irrf__ref").innerHTML = c && o >= 0 ? "".concat(l, "%") : "ISENTO", document.getElementById("irrf__valor").innerHTML = o >= 0 ? o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00" }, buttonInsalubridade = document.getElementById("calculateInsalubridade"); buttonInsalubridade && buttonInsalubridade.addEventListener("click", function () { return calculatorInsalubrity() }); var calculatorInsalubrity = function () { refreshSubmit(); var e = document.querySelector("#data__inicial").value, t = parseFloat(document.querySelector("#slct2").value) / 100, a = _slicedToArray(e.split("/"), 2), r = a[0], n = a[1], o = calculateInsalubrity(parseInt(r), parseInt(n)).data, c = o.salary * t; ativarResultado(), document.querySelector("#salario__data").innerHTML = o.salary.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#valor_insalubridade").innerHTML = c.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.querySelector("#total_insalubridade").innerHTML = (o.salary + c).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }; function calculadoraInss() { refreshSubmit(); var e = document.getElementById("salario__bruto").value, t = parseFloat(e.replace(/\./g, "").replace(",", ".")), a = calcularINSS(t), r = a.inssVal, n = a.inssPorcent, o = (100 * n).toFixed(2); ativarResultado(), document.getElementById("inss__ref").innerHTML = n ? "".concat(o, "%") : "TETO", document.getElementById("inss__valor").innerHTML = r.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } function jurosCompostos() { ativarResultado(); var e = document.querySelector("#valor__inicial").value, t = document.querySelector("#valor__mensal").value, a = document.querySelector("#taxa__juros").value, r = document.querySelector("#taxa__juro__periodo").value, n = parseInt(document.querySelector("#periodo").value), o = document.querySelector("#periodo__em").value, c = parseFloat(e.replace(/\./g, "").replace(",", ".")), l = parseFloat(t.replace(/\./g, "").replace(",", ".")), i = parseFloat(a.replace(/\./g, "").replace(",", ".")); i = "anual" === r ? percentYearToMonth(i) / 100 : i / 100; for (var u, s = "anos" === o ? 12 * n : n, d = c, m = [c], y = 0, _ = [c], p = 0, g = [0], v = [{ accumulatedMoney: c, investedMoney: c, totalInterest: 0 }], S = 1; S <= s; S++)p = parseInt(d * i * 1e4) / 1e4, d = Math.floor(1e4 * (d + parseInt(1e4 * (p + l)) / 1e4)) / 1e4, y = c + l * S, Math.floor(1e4 * parseFloat(d - y).toFixed(2)) / 1e4, v = [].concat(_toConsumableArray(v), [{ accumulatedMoney: d, investedMoney: y, totalInterest: d - y }]), m = [].concat(_toConsumableArray(m), [d]), _ = [].concat(_toConsumableArray(_), [y]), g = [].concat(_toConsumableArray(g), [d - y]); u = 0 === i || 0 === n ? "R$ 0,00" : (d - y).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__investido").innerHTML = y.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__juros").innerHTML = u, document.querySelector("#total").innerHTML = d.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } var calculatorEffectiveInterest = document.getElementById("calculatorEffectiveInterest"); calculatorEffectiveInterest && calculatorEffectiveInterest.addEventListener("click", function () { return calculateEffectiveInterest() }); var calculateEffectiveInterest = function () { refreshSubmit(); var e = parseFloat(document.getElementById("valor__total").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("numero__prestacoes").value.replace(/\./g, "").replace(",", ".")) || 0, a = parseFloat(document.getElementById("valor__prestacao").value.replace(/\./g, "").replace(",", ".")), r = [], n = rate(t, -a, e); ativarResultado(); var o = a * t, c = o - e, l = 100 * (Math.pow(1 + n, 12) - 1), u = (100 * n).toFixed(2); r.push({ number: 0, installment: 0, interest: 0, amortisation: 0, debtor: e }); var s = e; for (i = 1; i <= t + 1; i++) { var d = n * s, m = a - d; s -= m, r.push({ number: i, installment: a, interest: d, amortisation: m, debtor: s }) } document.querySelector("#total__prestacao").innerHTML = o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__juros").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__amortizacao").innerHTML = e.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rate__interest__monthly").innerHTML = 0 === e ? "0.0% a.m." : "".concat(u.replace(".", ","), "% a.m."), document.getElementById("taxa__juros").innerHTML = 0 === e ? "0.0% a.a." : "".concat(l.toFixed(2).replace(".", ","), "% a.a."); var y = document.getElementById("juros__efetivo__price"); y.getElementsByTagName("tr").length > 0 && empty(y), r.map(function (e, t) { var a = y.insertRow(t), r = a.insertCell(0), n = a.insertCell(1), o = a.insertCell(2), c = a.insertCell(3), l = a.insertCell(4); r.innerHTML = "".concat(t), n.innerHTML = e.installment.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), o.innerHTML = e.interest.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), c.innerHTML = e.amortisation.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), l.innerHTML = e.debtor.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), r.classList.toggle("text-center", !0), n.classList.toggle("text-right", !0), o.classList.toggle("text-right", !0), c.classList.toggle("text-right", !0), l.classList.toggle("text-right", !0) }) }, calculatorLoanPersonal = document.getElementById("calculatorLoanPersonal"); calculatorLoanPersonal && calculatorLoanPersonal.addEventListener("click", function () { return calculateLoanPersonal() }); var calculateLoanPersonal = function () { refreshSubmit(); var e = parseFloat(document.getElementById("value__loan").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("number__installment").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("rate__interest").value.replace(/\./g, "").replace(",", ".")), r = "anual" === document.getElementById("taxa__juro__periodo").value ? a / 12 / 100 : a / 100, n = 1 / ((1 - Math.pow(1 + r, -t)) / r / e), o = n * t, c = o - e; ativarResultado(), document.getElementById("result__total__operation").innerHTML = n ? o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.getElementById("result__value__loan").innerHTML = e.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("result__interest__due").innerHTML = c ? c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.getElementById("result__installment__monthly").innerHTML = n ? n.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00" }; if (document.getElementById("table__margin__consigned")) { var myVariable = ["value__benefit", "value__portion"], marginAvailable = 0; myVariable.forEach(function (e) { document.getElementById("".concat(e)).addEventListener("keyup", function () { var e = parseFloat(document.getElementById("value__benefit").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("value__portion").value.replace(/\./g, "").replace(",", ".")); marginAvailable = .35 * e - t; var a = .35 * e, r = .05 * e; document.getElementById("result__margin__available").innerHTML = marginAvailable.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__margin__allowed").innerHTML = a.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__consigned").innerHTML = r.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) }) }); var inputTimePay = document.getElementById("time__pay"), btnClean = document.getElementById("button__clean"); inputTimePay.addEventListener("keyup", function () { inputTimePay.value > 8 || 0 == inputTimePay.value ? (document.getElementById("input__time__pay").classList.add("input__value__error"), document.getElementById("text__error").classList.add("input__text__error__show")) : (document.getElementById("input__time__pay").classList.remove("input__value__error"), document.getElementById("text__error").classList.remove("input__text__error__show")) }), btnClean.addEventListener("click", function () { document.getElementById("input__time__pay").classList.remove("input__value__error"), document.getElementById("text__error").classList.remove("input__text__error__show") }); var btnCalculate = document.getElementById("calculatorMarginConsigned"); btnCalculate.addEventListener("click", function () { if (refreshSubmit(), inputTimePay.value <= 8 && inputTimePay.value > 0) { ativarResultado(), document.getElementById("result__text").classList.toggle("d-none", !1); var e = parseFloat(document.getElementById("time__pay").value), t = document.getElementById("rate__cet").value; document.getElementById("year__selected").innerHTML = e, document.getElementById("rate__selected").innerHTML = t; var a = parseFloat(t) / 100, r = (1 - Math.pow(1 + a, -12 * e)) / a * marginAvailable, n = parseFloat(document.getElementById("value__benefit").value.replace(/\./g, "").replace(",", ".")); document.getElementById("value__total").innerHTML = 0 === n ? "R$ 0,00" : r.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__total__operation").innerHTML = (marginAvailable * (12 * e)).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__value__loan").innerHTML = 0 === n ? "R$ 0,00" : r.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__interest__due").innerHTML = 0 === n ? "R$ 0,00" : (marginAvailable * (12 * e) - r).toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }), document.getElementById("result__installment__monthly").innerHTML = marginAvailable.toLocaleString("pt-BR", { minimumFractionDigits: 2, style: "currency", currency: "BRL" }) } }) } var calculatorPesoIdeal = document.getElementById("calculatorWeightIdeal"); calculatorPesoIdeal && calculatorPesoIdeal.addEventListener("click", function () { return calculateWeightIdeal() }); var calculateWeightIdeal = function () { refreshSubmit(), ativarResultado(); var e = parseFloat(document.getElementById("altura").value.replace(/\./g, "").replace(",", ".")) || 0, t = document.querySelector("#slct").value, a = document.getElementById("formula__robinson"), r = document.getElementById("formula__devine"); "masculino" === t ? (a.innerHTML = parseFloat((100 * e - 152.4) / 2.54 * 1.9 + 52).toFixed(2), r.innerHTML = parseFloat((100 * e - 152.4) / 2.54 * 2.3 + 50).toFixed(2)) : (a.innerHTML = parseFloat((100 * e - 152.4) / 2.54 * 1.7 + 49).toFixed(2), r.innerHTML = parseFloat((100 * e - 152.4) / 2.54 * 2.3 + 45.5).toFixed(2)) }; if (document.getElementById("calculatorPriceSale")) { var _btnCalculate = document.getElementById("calculatorPriceSale"); _btnCalculate.addEventListener("click", function () { refreshSubmit(), ativarResultado(); var e, t, a = parseFloat(document.getElementById("price__cost").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("value__freight").value.replace(/\./g, "").replace(",", ".")), n = parseFloat(document.getElementById("cost__packaging").value.replace(/\./g, "").replace(",", ".")), o = parseFloat(document.getElementById("taxe").value.replace(/\./g, "").replace(",", ".")), c = parseFloat(document.getElementById("taxe__card").value.replace(/\./g, "").replace(",", ".")), l = parseFloat(document.getElementById("commissions").value.replace(/\./g, "").replace(",", ".")), i = parseFloat(document.getElementById("margin__profit").value.replace(/\./g, "").replace(",", ".")), u = document.getElementById("margin__profit__select").value, s = a + r + n, d = o + c + l, m = d / 100, y = "percent" === u ? i / 100 : 0; "percent" === u ? e = y * (t = s / (1 - (m + y))) : (t = (s + i) / (1 - (m + y)), e = i); var _ = s / t * 100, p = 100 - (_ + d); document.getElementById("cost__unit__total").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("cost__unit__percent").innerHTML = 0 === a ? "0,00%" : "".concat(_.toFixed(2).toString().replace(".", ","), "%"), document.getElementById("cost__sob__sale__total").innerHTML = (m * t).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("cost__sob__sale__percent").innerHTML = "".concat(d.toFixed(2).toString().replace(".", ","), "%"), document.getElementById("margin__profit__total").innerHTML = e.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("margin__profit__percent").innerHTML = "".concat("percent" === u ? i.toFixed(2).toString().replace(".", ",") : p.toFixed(2).toString().replace(".", ","), "%"), document.getElementById("result__final__total").innerHTML = t.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }) } function calcularescisao() { refreshSubmit(), ativarResultado(); var e = document.querySelector("#salario__bruto").value, t = document.querySelector("#data__contratacao").value, a = document.querySelector("#data__demissao").value, r = document.querySelector(".select__maior").value, n = document.querySelector(".aviso__previo").value, o = document.querySelector("#ferias__adquiridas").checked, c = parseInt(document.querySelector("#numero__dependentes").value), l = document.querySelector("#saldo__fgts").value, i = parseInt(document.querySelector("#ferias__vencidas").value), u = { grossSalary: parseFloat(e.replace(/\./g, "").replace(",", ".")), hiringDate: moment(t), resigningDate: moment(a), reason: r, notice: n, numDependents: c, initialBalance: parseFloat(l.replace(/\./g, "").replace(",", ".")), unusedVacationDays: o && i || "0" }, s = calculateRescisao(u); renderMainResultTable(s), renderResissionTable(s), renderSalaryBalanceTable(s.salaryBalance), renderCompensatedNoticeTable(s), renderNotWorkedNoticeTable(s), renderVacationsTable(s), renderProportionalThirteenthSalaryTable(s.prop13Salary), renderCompensatedlThirteenthSalaryTable(s.notice13Salary), renderFGTSDepositTable(s.rescisaoDepositFGTS), renderFGTSTable(s) } var renderMainResultTable = function (e) { var t = e.sumResicao, a = e.lastContractDay, r = e.noticeDays; document.querySelector("#rescisao__valor").innerHTML = t.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#data__valor").innerHTML = a, document.querySelector("#dias__aviso__previo").innerHTML = "".concat(r || 0, " dias") }, renderResissionTable = function (e) { var t = e.salaryBalance, a = e.vacations, r = e.prop13Salary, n = e.notice13Salary, o = e.debtsBalance, c = e.compensatedBalance, l = e.notWorked, i = e.noticeDays, u = e.sumResicao; document.querySelector("#rescisao__saldo__salario").innerHTML = t.liquidVal.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao__ferias").innerHTML = a ? a.liquidVal.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.querySelector("#rescisao__decimo__terceiro__proporcional").innerHTML = r ? r.liquidVal.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.querySelector("#rescisao-aviso-nao-cumprido").style.display = l && o ? "table-row" : "none", document.querySelector(".aviso-nao-cumprido").innerHTML = l && o && (-1 * o.liquidVal).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao-aviso").style.display = i && c ? "table-row" : "none", document.querySelector("#rescisao-aviso-val").innerHTML = i && c && c.liquidVal.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao-aviso-decimo").style.display = n ? "table-row" : "none", document.querySelector("#rescisao-aviso-decimo-val").innerHTML = n ? n.liquidVal.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) : "R$ 0,00", document.querySelector("#rescisao__resultado").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, renderSalaryBalanceTable = function (e) { var t = e.lastWorkedDays, a = e.grossVal, r = e.inssPorcent, n = e.inssVal, o = e.irrfPorcent, c = e.irrfVal, l = e.liquidVal; document.querySelector("#saldo__salario__bruto__quantidade").innerHTML = "".concat(t || 0, " ").concat(1 == t ? "dia" : "dias"), document.querySelector("#saldo__salario__bruto__proventos").innerHTML = a.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#saldo__salario__inss__aliquota").innerHTML = r ? "".concat((100 * r).toFixed(2), "%") : "TETO", document.querySelector("#saldo__salario__inss__descontos").innerHTML = n.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#saldo__salario__irrf__aliquota").innerHTML = "".concat((100 * o).toFixed(2), "%"), document.querySelector("#saldo__salario__irrf__descontos").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#saldo__salario__resultado").innerHTML = l.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, renderCompensatedNoticeTable = function (e) { var t = e.noticeDays, a = e.compensatedBalance; if (document.querySelector("#aviso-previo").style.display = t && a ? "block" : "none", t && a) { var r = a.grossVal, n = a.inssPorcent, o = a.inssVal, c = a.liquidVal; document.querySelector("#rescisao-aviso-salario-dias").innerHTML = "".concat(t || 0, " dias"), document.querySelector("#rescisao-aviso-salario-val").innerHTML = r.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao-aviso-inss").innerHTML = n ? "".concat(100 * n, "%") : "TETO", document.querySelector("#rescisao-aviso-inss-val").innerHTML = o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao-aviso-total").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } }, renderNotWorkedNoticeTable = function (e) { var t = e.notWorked, a = e.debtsBalance; document.querySelector("#aviso-previo").style.display = t && a ? "block" : "none" }, renderVacationsTable = function (e) { var t = e.vacations, a = e.isCompensated, r = t.unusedVacationDays, n = t.unusedBalance, o = t.monthsByProportion, c = t.baseByProportion, l = t.monthsByNotice, i = t.baseByNotice, u = t.liquidVal; document.querySelector("#ferias__vencidas__quantidade").innerHTML = "".concat(r || 0, " ").concat(1 == r ? "dia" : "dias"), document.querySelector("#ferias__vencidas__proventos").innerHTML = (n || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#ferias__proporcionais__aquisitivo").innerHTML = "".concat(o || 0, " ").concat(1 == o ? "mÃªs" : "meses"), document.querySelector("#ferias__proporcionais__proventos").innerHTML = (c || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#rescisao-ferias-aviso").style.display = a ? "table-row" : "none", document.querySelector("#rescisao-ferias-aviso-meses").innerHTML = "".concat(l || 0, " ").concat(1 == l ? "mÃªs" : "meses"), document.querySelector("#rescisao-ferias-aviso-val").innerHTML = (i || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#ferias__resultado").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, renderProportionalThirteenthSalaryTable = function (e) { if (e) { var t = e.monthsByWork, a = e.grossVal, r = e.inssPorcent, n = e.inssVal, o = e.irrfPorcent, c = e.irrfVal, l = e.liquidVal; document.querySelector("#decimo__quantidade").innerHTML = "".concat(e && t || 0, " ").concat(e && 1 == t ? "mÃªs" : "meses"), document.querySelector("#decimo__proventos").innerHTML = (e && a || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo__inss__aliquota").innerHTML = e ? r ? "".concat((100 * r).toFixed(2), "%") : "TETO" : "8.00%", document.querySelector("#decimo__inss__descontos").innerHTML = (e && n || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo__irrf__aliquota").innerHTML = "".concat((100 * (e && o || 0)).toFixed(2), "%"), document.querySelector("#decimo__irrf__descontos").innerHTML = (e && c || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo__resultado").innerHTML = (e && l || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } }, renderCompensatedlThirteenthSalaryTable = function (e) { if (document.querySelector("#decimo-indenizado").style.display = e ? "block" : "none", e) { var t = e.monthsByNotice, a = e.grossVal, r = e.inssPorcent, n = e.inssVal, o = e.irrfPorcent, c = e.irrfVal, l = e.liquidVal; document.querySelector("#decimo-indenizado-salario-meses").innerHTML = "".concat(t || 0, " ").concat(1 == t ? "mÃªs" : "meses"), document.querySelector("#decimo-indenizado-salario-val").innerHTML = (a || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo-indenizado-inss").innerHTML = void 0 !== o ? o ? "".concat((100 * r).toFixed(2), "%") : "TETO" : "8.00%", document.querySelector("#decimo-indenizado-inss-val").innerHTML = (n || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo-indenizado-irrf").innerHTML = "".concat((100 * (o || 0)).toFixed(2), "%"), document.querySelector("#decimo-indenizado-irrf-val").innerHTML = (c || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#decimo-indenizado-total").innerHTML = (l || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } }, renderFGTSDepositTable = function (e) { var t = e.salaryBalance, a = e.compensatedBalance, r = e.prop13Salary, n = e.result; document.querySelector("#deposito__fgts__saldo").innerHTML = t.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#deposito__fgts__aviso").innerHTML = (a && a || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#deposito__fgts__decimo").innerHTML = (r && r || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#deposito__fgts__resultado").innerHTML = n.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, renderFGTSTable = function (e) { var t = e.rescisaoFGTS, a = e.rescisaoDepositFGTS, r = e.penaltyRate, n = e.withdrawRate, o = t.initialBalance, c = t.totalWhileWorking, l = t.depositTotal, i = t.penalty, u = t.total, s = t.withdrawTotal; document.querySelector("#fgts__saldo").innerHTML = o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#fgts__empregaticio").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#fgts__rescisao").innerHTML = a.result.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#fgts__deposito__total").innerHTML = l.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector(".fgts__multa").style.display = r ? "table-row" : "none", document.querySelector("#fgts__multa__label").innerHTML = "Multa de ".concat(100 * r, "% sobre o FGTS a receber"), document.querySelector("#fgts__multa__val").innerHTML = i.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#fgts__total__multa").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#fgts__disponivel").innerHTML = "".concat(100 * n, "%"), document.querySelector("#fgts__resultado").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#saque__valor").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, calculatorAnnualSalary = function () { refreshSubmit(), ativarResultado(); var e = parseFloat(document.getElementById("monthly__salary").value.replace(/\./g, "").replace(",", ".")), t = parseFloat(document.getElementById("health__plan").value.replace(/\./g, "").replace(",", ".")), a = parseFloat(document.getElementById("transportation__ticket").value.replace(/\./g, "").replace(",", ".")), r = parseFloat(document.getElementById("meal__ticket").value.replace(/\./g, "").replace(",", ".")), n = 12 * e, o = e, c = e / 3, l = n + o + c, i = 0, u = 0, s = 0, d = 0; d = document.getElementById("work__saturday").checked ? (i = 12 * t) + (u = 303 * a) + (s = 303 * r) : (i = 12 * t) + (u = 251 * a) + (s = 251 * r); var m = calculateINSSandIRRF(e, 0), y = m.inssVal, _ = m.irrfVal, p = { inss: 12 * y, irpf: 12 * _, total: 12 * y + 12 * _ + .08 * e * 12 }, g = .08 * e * 12, v = l - p.total, S = l - p.total + d, L = l - p.total + d + g; document.getElementById("value__salary").innerHTML = n.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__thirteenth").innerHTML = o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__holiday").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__annual").innerHTML = l.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__health__plan").innerHTML = i.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__transportation__ticket").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__meal__ticket").innerHTML = s.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__annual__ticket").innerHTML = d.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__inss").innerHTML = p.inss.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__irpf").innerHTML = p.irpf.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__annual__discount").innerHTML = p.total.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__fgts").innerHTML = g.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__liquid").innerHTML = v.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__liquid__ticket").innerHTML = S.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("value__liquid__total").innerHTML = L.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }; function salarioBruto() { var e = document.getElementById("salario__liquido"), t = document.getElementById("desconto"), a = document.getElementById("numero__dependente"); refreshSubmit(), ativarResultado(); var r = calcularLiquido(parseFloat(e.value.replace(/\./g, "").replace(",", ".")), parseFloat(t.value.replace(/\./g, "").replace(",", ".")), a.value); document.getElementById("salario__proventos").innerHTML = "R$ ".concat(r[0].toFixed(2)), document.getElementById("inss__desconto").innerHTML = "R$ ".concat(r[1]), document.getElementById("irff__ref").innerHTML = "".concat(r[2], "%"), document.getElementById("irff__desconto").innerHTML = "R$ ".concat(r[3].toFixed(2)), document.getElementById("outros__descontos").innerHTML = "R$ ".concat(t.value), document.getElementById("total__salario").innerHTML = "R$ ".concat(r[0].toFixed(2)), document.getElementById("total__desconto").innerHTML = "R$ ".concat(r[4].toFixed(2)), document.getElementById("valor__bruto").innerHTML = "R$ ".concat(e.value) } function calcularLiquido(e, t, a) { for (var r = 1.35 * e, n = 0, o = 0, c = 0, l = 0, i = 0; Math.abs(e - n) > .01;) { var u = calcularINSS(r).inssVal, s = calculateINSSandIRRF(r, a), d = s.irrfVal; o = u, c = (100 * s.irrfPorcent).toFixed(2), l = d; var m = t + u + d; i = m, r -= (n = r - m) - e } return [r, o, c, l, i] } var isCalculatorSalaryFamily = document.getElementById("calculatorSalaryFamily"); isCalculatorSalaryFamily && isCalculatorSalaryFamily.addEventListener("click", function () { return calculateSalaryFamily() }); var calculateSalaryFamily = function () { refreshSubmit(); var e = parseFloat(document.getElementById("renda__mensal").value.replace(/\./g, "").replace(",", ".")) || 0, t = parseInt(document.getElementById("quantidade__filhos").value) || 0, a = parseInt(document.getElementById("slct2").value), r = document.getElementById("obs__renda"), n = document.getElementById("obs__situacao"), o = document.getElementById("resultado__salario__familia"), c = 51.27 * t; e > 1503.25 ? (n.classList.toggle("d-none", !0), o.classList.toggle("d-none", !0), r.classList.toggle("d-none", !1)) : 2 === a ? (r.classList.toggle("d-none", !0), o.classList.toggle("d-none", !0), n.classList.toggle("d-none", !1)) : (ativarResultado(), o.classList.toggle("d-none", !1), r.classList.toggle("d-none", !0), n.classList.toggle("d-none", !0), document.querySelector("#valor__salario").innerHTML = 51.27.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#valor__filhos").innerHTML = t, document.querySelector("#valor__total").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" })) }; function salarioLiquido() { refreshSubmit(); document.querySelector(".resultado"), document.querySelector(".titulo__resultado"); ativarResultado(); var e = document.querySelector("#salario__bruto").value, t = document.querySelector("#desconto").value, a = parseInt(document.querySelector("#numero__dependente").value), r = parseFloat(e.replace(/\./g, "").replace(",", ".")), n = parseFloat(t.replace(/\./g, "").replace(",", ".")), o = calcularINSS(r), c = o.inssVal, l = o.inssPorcent, i = calculateINSSandIRRF(r, a), u = i.irrfVal, s = i.irrfPorcent, d = i.aliquotaIrrf, m = (100 * l).toFixed(2), y = ((100 * s).toFixed(2), n + c + u), _ = r - y; document.querySelector("#salario__proventos").innerHTML = r.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__salario").innerHTML = r.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#outros__descontos").innerHTML = n.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#inss").innerHTML = l ? "".concat(m.toString().replace(".", ","), "%") : "TETO", document.querySelector("#inss__desconto").innerHTML = c.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#irff__ref").innerHTML = s ? "".concat(d.toString().replace(".", ","), "%") : "0,00%", document.querySelector("#irff__desconto").innerHTML = u.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#total__desconto").innerHTML = y.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.querySelector("#valor__liquido").innerHTML = _.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) } var seguroDesemprego = function () { refreshSubmit(), ativarResultado(); var e = 0;["ultimo", "penultimo", "antepenultimo"].map(function (t) { return e += parseFloat(document.getElementById("".concat(t, "__salario")).value.replace(/\./g, "").replace(",", ".")) }); var t = (e.toFixed(2) / 3).toFixed(2), a = parseInt(document.getElementById("meses__trabalhados").value), r = parseInt(document.querySelector(".solicitacao").value), n = document.querySelector(".no__safe"), o = 0, c = 0; a < 12 ? n.classList.toggle("d-block", !0) : n.classList.toggle("d-block", !1); var l = function (e) { if (e <= 1306) o = 1045; else if (e > 1306 && e <= 1599.61) o = parseFloat(.8 * e); else if (e > 1599.61 && e <= 2666.29) { var t = (e - 1599.61).toFixed(2); o = parseFloat((.5 * t + 1279.69).toFixed(2)) } else e > 2666.69 && (o = 1813.03) }; 1 === r ? a >= 12 && a <= 23 ? (l(t), c = 4) : a >= 24 && (l(t), c = 5) : 2 === r ? a >= 9 && a <= 11 ? (l(t), c = 3) : a >= 12 && a <= 23 ? (l(t), c = 4) : a >= 24 && (l(t), c = 5) : a >= 6 && a <= 11 ? (l(t), c = 3) : a >= 12 && a <= 23 ? (l(t), c = 4) : a >= 24 && (l(t), c = 5), document.getElementById("seguro__valor").innerHTML = o.toLocaleString("pt-BR", { style: "currency", currency: "BRL" }), document.getElementById("seguro__periodo").innerHTML = "".concat(c, " parcelas") }; function simuladorVenda() { var e = document.getElementById("valor__venda"), t = document.getElementById("taxa__maquina"); refreshSubmit(), ativarResultado(); var a = calcularVendas(parseFloat(e.value.replace(/\./g, "").replace(",", ".")), parseFloat(t.value.replace(/\./g, "").replace(",", "."))); document.getElementById("venda__com__desconto").innerHTML = convertIfExistsOrReturnZero(a[0]), document.getElementById("venda__com__acrescimo").innerHTML = convertIfExistsOrReturnZero(a[1]) } function calcularVendas(e, t) { return [e * (1 - t / 100), e / (1 - t / 100)] } var queryString = window.location.search, urlParams = new URLSearchParams(queryString), exists = urlParams.has("widget_calc") && "true" === urlParams.get("widget_calc"); function readMoreTextToggle(e, t, a) { var r = document.getElementById(e), n = document.getElementById(t), o = !0; r.addEventListener("click", function (e) { e.preventDefault(), r.textContent = o ? "Mostrar menos" : "Mostrar mais", o = !o, n && n.classList.toggle(a) }) } function readMoreTableToggle(e) { e.preventDefault(); var t = document.getElementById("show-more-table"), a = document.getElementById("result-table-collapse"); " Mostrar mais " === t.innerHTML ? t.innerHTML = " Mostrar menos " : t.innerHTML = " Mostrar mais ", a && a.classList.toggle("result-table-collapse") } exists && (window.onload = function () { document.querySelectorAll(".titulo__resultado, .resultado").forEach(function (e) { e.classList.add("d-block") }); var e = document.querySelectorAll(".resultado > tbody > tr > td[id]"), t = document.querySelectorAll(".resultado > tfoot > tr > td[id]");[].concat(_toConsumableArray(e), _toConsumableArray(t)).forEach(function (e) { e.textContent = "R$ 0,00" });[{ queryString: "colorButton", type: "background", valor: urlParams.get("colorButton"), element: document.querySelectorAll(".button__calcular") }, { queryString: "colorInput", type: "background", valor: urlParams.get("colorInput"), element: document.querySelectorAll(".input__com__cifrao") }, { queryString: "colorCifrao", type: "background", valor: urlParams.get("colorCifrao"), element: document.querySelectorAll(".cifrao") }, { queryString: "colorNumber", type: "background", valor: urlParams.get("colorNumber"), element: document.querySelectorAll(".input__type__number") }, { queryString: "colorTable", type: "background", valor: urlParams.get("colorTable"), element: document.querySelectorAll(".resultado th, .table-all__value th, .table-series th") }, { queryString: "colorSelected", type: "background", valor: urlParams.get("colorSelected"), element: document.querySelectorAll("#slct") }, { queryString: "colorText", type: "color", valor: urlParams.get("colorText"), element: document.querySelectorAll(".input__com__cifrao, .input__type__number, .cifrao, #slct, .resultado th, .table-all__value th, .table-series th") }, { queryString: "fontFamily", type: "font", valor: urlParams.get("font"), element: document.querySelector("body") }].map(function (e) { var t, a = e.element; if (urlParams.has(e.queryString) && "background" === e.type) for (t = 0; t < a.length; t++)a[t].style.backgroundColor = urlParams.get(e.queryString); else if ("color" === e.type) { var r; for (r = 0; r < a.length; r++)a[r].style.color = urlParams.get(e.queryString) } else "font" === e.type && (a.style.fontFamily = urlParams.get(e.queryString)) }) }), readMoreTextToggle("show-more", "result-calc-collapse", "result-calc-collapse");
//# sourceMappingURL=calculator.min.js.map